package com.minha_sala_de_aula.Fabrica;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LinearGradientPaint;
import java.util.ArrayList;
import java.util.List;

public class PanelDegradeAzul extends javax.swing.JPanel {

    
    private final List<CorModelo> cores;
    
    /**
     * Creates new form PanelDegrade
     */
    public PanelDegradeAzul() {
        initComponents();
        setOpaque(false);
        cores = new ArrayList<>();
        cores.add(new CorModelo(new Color(176, 242, 246), 0f));
        cores.add(new CorModelo(new Color(112, 203, 209), 0.8f));
        cores.add(new CorModelo(new Color(60, 162, 169), 1f));
    }
    /*
    public void addCores(CorModelo... color) {
        for (CorModelo c : color) {
            cores.add(c);
        }
    }
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    @Override
    protected void paintComponent(Graphics grphcs) {
        if (!cores.isEmpty()) {
            Graphics2D g2 = (Graphics2D) grphcs;
            Color cor[] = new Color[cores.size()];
            float posicao[] = new float[cores.size()];
            for (int i = 0; i < cores.size(); i++) {
                cor[i] = cores.get(i).getColor();
                posicao[i] = cores.get(i).getPosition();
            }
            LinearGradientPaint g = new LinearGradientPaint(0, 0, 0, getHeight(), posicao, cor);
            g2.setPaint(g);
            g2.fillRect(0, 0, getWidth(), getHeight());
        }
        super.paintComponent(grphcs);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
